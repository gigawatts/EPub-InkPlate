@startuml
  participant Requester
  participant PageLocsMgr
  control AsapQueue
  participant StateTask
  control DoneQueue
  control TaskQueue
  participant RetrieverTask

  RetrieverTask   <- PageLocsMgr : Startup
  StateTask       <- PageLocsMgr : Startup

  StateTask       <- PageLocsMgr : start_retrieval(doc, first_item)
  activate StateTask

  note left
    The document retrieval 
    optimizes the order of 
    the items considering
    how the user interacts.
  end note
  loop All Items
    StateTask     -> TaskQueue : retrieve(item)
    TaskQueue     -> RetrieverTask : retrieve(item)
    activate RetrieverTask
    RetrieverTask -> RetrieverTask : do item
    DoneQueue     <- RetrieverTask : item_retrieved(item)
    deactivate RetrieverTask
    StateTask     <- DoneQueue : item_retrieved(item)
  end

  == Item already known ==
  Requester      -> PageLocsMgr: get_page_loc(item, offset)
  activate PageLocsMgr

  Requester      <- PageLocsMgr: got_it(start_offset, size)
  deactivate PageLocsMgr

  == Item needs to be retrieved (no yet in the list) ==

  Requester     -> PageLocsMgr: get_page_loc(item, offset)
  activate PageLocsMgr
  PageLocsMgr   -> StateTask : retrieve_asap(item)

  StateTask     -> TaskQueue : retrieve(item)
  TaskQueue     -> RetrieverTask : retrieve(item)
  activate RetrieverTask
  RetrieverTask -> RetrieverTask : do item
  DoneQueue     <- RetrieverTask : item_retrieved(item)
  deactivate RetrieverTask
  StateTask     <- DoneQueue : item_retrieved(item)


  AsapQueue     <- StateTask : got_asap(item)
  PageLocsMgr   <- AsapQueue : got_asap(item)
  Requester     <- PageLocsMgr : got_it(start_offset, size) 
  deactivate PageLocsMgr

  StateTask     <- StateTask : document_completed()
  PageLocsMgr   <- StateTask : stopped()
  deactivate StateTask
@enduml