@startuml
  participant Requester
  participant PageLocsMgr
  control AnsQueue
  control CmdQueue
  participant StateTask
  control DoneQueue
  control TaskQueue
  participant RetrieverTask

  RetrieverTask   <- PageLocsMgr : Startup
  StateTask       <- PageLocsMgr : Startup

  CmdQueue        <- PageLocsMgr : start(doc, first_item, item_count)
  CmdQueue        -> StateTask : start_document(...)
  activate StateTask

  note left
    The document retrieval 
    optimizes the order of 
    the items considering
    how the user interacts.
  end note
  loop All Items
    StateTask     -> TaskQueue : retrieve(item)
    TaskQueue     -> RetrieverTask : retrieve(item)
    activate RetrieverTask
    RetrieverTask -> RetrieverTask : do item
    DoneQueue     <- RetrieverTask : item_retrieved(item)
    deactivate RetrieverTask
    StateTask     <- DoneQueue : item_retrieved(item)
  end

  == Item already known ==
  Requester       -> PageLocsMgr: get_page_loc(item, offset)
  activate PageLocsMgr

  Requester       <- PageLocsMgr: got_it(start_offset, size)
  deactivate PageLocsMgr

  == Item needs to be retrieved (no yet in the list) ==

  Requester       -> PageLocsMgr: get_page_loc(item, offset)
  activate PageLocsMgr
  PageLocsMgr     -> CmdQueue : retrieve_asap(item)
  CmdQueue        -> StateTask : retrieve_asap(item)

  StateTask       -> TaskQueue : retrieve(item)
  TaskQueue       -> RetrieverTask : retrieve(item)
  activate RetrieverTask
  RetrieverTask   -> RetrieverTask : do item
  DoneQueue       <- RetrieverTask : item_retrieved(item)
  deactivate RetrieverTask
  StateTask       <- DoneQueue : item_retrieved(item)


  AsapQueue       <- StateTask : got_asap(item)
  PageLocsMgr     <- AsapQueue : got_asap(item)
  Requester       <- PageLocsMgr : got_it(start_offset, size) 
  deactivate PageLocsMgr

  AnsQueue        <- StateTask : end_document()
  deactivate StateTask
  PageLocsMgr     <- AnsQueue : end_document()
  
@enduml